// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.AspNetCore.DataProtection.EntityFrameworkCore;


namespace Vincall.Infrastructure
{
    public partial class VincallDBContext : DbContext, IDataProtectionKeyContext
    {


        public VincallDBContext(DbContextOptions<VincallDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Agent> Agents { get; set; }
        public virtual DbSet<CallList> CallLists { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<SysVersion> SysVersions { get; set; }
        public virtual DbSet<TwilioSetting> TwilioSettings { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<GlobalSetting> GlobalSetting { get; set; }
        public virtual DbSet<UserComm100> UserComm100 { get; set; }
        public virtual DbSet<VincallConnectionState> VincallConnectionState { get; set; }


        

        public DbSet<DataProtectionKey> DataProtectionKeys  {get;set;}

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Agent>(entity =>
            {
                entity.ToTable("Agent");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.UpdateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.DeviceNumber).HasMaxLength(5);

                entity.Property(e => e.Remark).HasMaxLength(50);

                entity.Property(e => e.State).HasDefaultValueSql("((0))");

                entity.Property(e => e.UserAccount).HasMaxLength(20);
            });

            modelBuilder.Entity<VincallConnectionState>(entity =>
            {
                entity.ToTable("VincallConnectionState");
                entity.Property(e => e.Connected).HasDefaultValueSql("((0))");
                entity.Property(e => e.Server).HasMaxLength(2048);
            });

            modelBuilder.Entity<CallList>(entity =>
            {
                entity.ToTable("CallList");

                entity.Property(e => e.CallTime).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.ExtensionNumber).HasMaxLength(5);

                entity.Property(e => e.From).HasMaxLength(20);

                entity.Property(e => e.To).HasMaxLength(20);
            });

            modelBuilder.Entity<Setting>(entity =>
            {
                entity.ToTable("Setting");

                entity.Property(e => e.OptionKey).HasMaxLength(50);
            });

            modelBuilder.Entity<GlobalSetting>(entity =>
            {
                entity.ToTable("GlobalSetting");

                entity.Property(e => e.Key).HasMaxLength(50);
                entity.Property(e => e.Value).HasMaxLength(8192);
            });

            modelBuilder.Entity<SysVersion>(entity =>
            {
                entity.ToTable("SysVersion");

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.Desc).HasMaxLength(50);

                entity.Property(e => e.Version).HasMaxLength(20);
            });

            modelBuilder.Entity<UserComm100>(entity =>
            {
                entity.ToTable("UserComm100");               

                entity.Property(e => e.PartnerId).HasMaxLength(100);

                entity.Property(e => e.ExternId).HasMaxLength(200);
                entity.Property(e => e.Email).HasMaxLength(200);
            });

            modelBuilder.Entity<TwilioSetting>(entity =>
            {
                entity.ToTable("TwilioSetting");

                entity.Property(e => e.AccountSid).HasMaxLength(50);

                entity.Property(e => e.ApiSecret).HasMaxLength(50);

                entity.Property(e => e.ApiSid).HasMaxLength(50);

                entity.Property(e => e.AppSid).HasMaxLength(50);

                entity.Property(e => e.AuthToken).HasMaxLength(50);

                entity.Property(e => e.CallId).HasMaxLength(20);
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.ToTable("User");

                entity.Property(e => e.Account).HasMaxLength(20);

                entity.Property(e => e.CreateDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.IsAdmin).HasDefaultValueSql("((0))");

                entity.Property(e => e.Password).HasMaxLength(50);

                entity.Property(e => e.Remark).HasMaxLength(50);

                entity.Property(e => e.UserName).HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}